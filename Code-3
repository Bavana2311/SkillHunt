INPUT:
from collections import deque

def min_of_max_brightness(k, brightness_levels):
    n = len(brightness_levels)
    if k > n:
        return -1 
    max_values = []
    dq = deque()  
    for i in range(n):
        while dq and dq[0] < i - k + 1:
            dq.popleft()
        while dq and brightness_levels[dq[-1]] <= brightness_levels[i]:
            dq.pop()
        dq.append(i)
        if i >= k - 1:
            max_values.append(brightness_levels[dq[0]])
    return min(max_values)
inp = list(map(int, input().split()))
k, n = inp[0], inp[1]
brightness_levels = inp[2:]
result = min_of_max_brightness(k, brightness_levels)
print(result)

OUTPUT:
3 7 1 3 5 2 8 6 4
5
